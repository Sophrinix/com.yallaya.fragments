/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package com.yallaya.fragments;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollProxy;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;
import org.appcelerator.titanium.proxy.TiViewProxy;
import android.view.View;

// This proxy can be created by calling Fragments.createExample({message: "hello world"})
@Kroll.proxy(creatableInModule=FragmentsModule.class)
public class FragmentProxy extends KrollProxy
{
	// Standard Debugging variables
	private static final String LCAT = "FragmentProxy";
	private static final boolean DBG = TiConfig.LOGD;
	
	protected TiFragment fragment = null;
	protected TiViewProxy container = null;
	protected String tag = null;
	protected boolean addToBackStack = false;
	
	// Constructor
	public FragmentProxy() {}
	
	// Handle creation options
	@Override
	public void handleCreationDict(KrollDict d)
	{
		Log.d(LCAT, "creating fragment proxy");
		if (d.containsKey("container")) {
			this.container = (TiViewProxy)d.get("container");
		}
		
		if (d.containsKey("tag")) {
			this.tag = d.getString("tag");
		}
		
		if (d.containsKey("putFragment") && (d.getBoolean("putFragment") == true)) {
			//FragmentsModule.s_putFragment(this);

		}
		if (d.containsKey("addToBackStack") && (d.getBoolean("addToBackStack") == true)) {
			this.addToBackStack = true;
		}
		
		this.fragment = TiFragment.newInstance(this);

		super.handleCreationDict(d);
	}
	
	public TiFragment getFragment()
	{
		return this.fragment;
	}
	
	// Methods
	@Kroll.method @Kroll.getProperty
	public boolean getAddToBackStack()
	{
		return this.addToBackStack;
	}

	@Kroll.method @Kroll.setProperty
	public void setAddToBackStack(boolean value)
	{
		this.addToBackStack = value;
	}
	
	// Methods
	@Kroll.method @Kroll.getProperty
	public String getTag()
	{
		return this.tag;
	}

	@Kroll.method @Kroll.setProperty
	public void setTag(String value)
	{
		this.tag = value;
	}
	
	@Kroll.method @Kroll.getProperty
	public TiViewProxy getContainer()
	{
		return this.container;
	}
	
	@Kroll.method @Kroll.setProperty
	public void setContainer(TiViewProxy proxy)
	{
		if (proxy == null) {
			Log.w(LCAT, "setContainer called with null");
			return;
		}
		
		this.container = proxy;
	
		if (fragment == null) {
			return;
		}
		
		final View cont = proxy.getOrCreateView().getOuterView();
		
		if (!fragment.isAdded()) {
			this.fragment.mainView = cont;
		}
		return;
		
		/*
		 *  TODO: find a way to set the container after the fragment as been added to the frame (maybe the code below can help?)
		 */
		
		
		/*
		final FrameLayout fView = (FrameLayout)fragment.getView();

		getActivity().runOnUiThread(new Runnable() {
	         public void run() {
	        	try {
	        		Log.w(LCAT, "TRYING TO ADD VIEW TO FRAME");
	        		 fView.addView(cont);
	 			} catch (Exception ex) {
	 				throw new RuntimeException ("failed to load view to fragment after it's been added " + ex.getMessage());
	 			}
	        	 
	         }
	    });
	    */
	}
	
}